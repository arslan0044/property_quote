// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  sessions  Session[]
  tokens    Token[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  token     String    @unique
  type      TokenType
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
model Calculator {
  id            Int             @id @default(autoincrement())
  name          String
  quoteTypes    QuoteType[]
}

model QuoteType {
  id             Int            @id @default(autoincrement())
  calculator     Calculator     @relation(fields: [calculatorId], references: [id])
  calculatorId   Int
  type           QuoteTypeEnum
  values         Value[]
  supplements    Supplement[]
  disbursements  Disbursement[]
}

model Value {
  id                   Int          @id @default(autoincrement())
  quoteType            QuoteType    @relation(fields: [quoteTypeId], references: [id])
  quoteTypeId          Int
  propertyValueStart   Decimal
  propertyValueEnd     Decimal
  legalFees            Int
  percentageOfValue    Boolean
  plusFixedFee         Boolean
  pricedOnApplication  Boolean
}

model Supplement {
  id                   Int          @id @default(autoincrement())
  quoteType            QuoteType    @relation(fields: [quoteTypeId], references: [id])
  quoteTypeId          Int
  title                String
  cost                 Decimal
  free                 Boolean
  joinQuotes           Boolean
  perIndividual        Boolean
  variable             Boolean
  pricedOnApplication  Boolean
}

model Disbursement {
  id                   Int          @id @default(autoincrement())
  quoteType            QuoteType    @relation(fields: [quoteTypeId], references: [id])
  quoteTypeId          Int
  title                String
  cost                 Decimal
  free                 Boolean
  joinQuotes           Boolean
  perIndividual        Boolean
  variable             Boolean
  pricedOnApplication  Boolean
}

enum QuoteTypeEnum {
  SALE
  PURCHASE
  REMORTGAGE
  TRANSFER_OF_EQUITY
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
}
